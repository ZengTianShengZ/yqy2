<style>
    .page-detail{
        width: 100%;
        overflow: hidden;
    }
    .f-jc-ac {
        display: flex;
        justify-content: flex-end;
        align-items: flex-end;
    }
    .comment-none{
        text-align: center;
        font-size: 34rpx;
        color: #343434;
        padding: 30rpx 0;
    }
    .comment-item {
        padding: 25rpx;
        box-sizing: border-box;
        margin-bottom: 120rpx;
    }

    .text-comment {
        display: block;
        padding: 6rpx 20rpx;
        background: rgba(160, 160, 160, 0.1);
    }

    .comment-textarea {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        padding: 10rpx 20rpx 5rpx;
        box-sizing: border-box;
        background: #ffffff;
        border-top: 1px solid rgba(159, 159, 159, 0.1);
    }

    .textarea {
        display: inline-block;
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        margin-right: 10rpx;
        padding: 20rpx;
        width: 540rpx;
    }

    .btn-submit {
        display: inline-block;
        width: 100rpx;
        padding: 0;
        font-size: 30rpx;
        color: #343434;
    }
</style>

<template>
    <view class="page-detail" wx:if="{{showPageFlag}}">
        <list-item isNavigateTo="false" itemData="{{itemData}}" itemIndex="{{0}}"></list-item>
        <text class="text-comment">最新评论</text>
        <view class="comment-item">
            <comment-item
                    wx:for="{{oCommentData.list}}"
                    itemData="{{item}}"
                    wx:key='index'
                    data-commentdata='{{item}}'
                    bindtap='clickCommentItem'>
            </comment-item>
            <wxc-loadmore wx:if='{{loadmoreFlag}}' text="加载更多..." icon="{{true}}"></wxc-loadmore>
            <wxc-loadmore wx:if='{{loadmoreIsEndFlag}}' text="没评论啦 ~ 俺也发条评论" is-end="{{true}}"></wxc-loadmore>
        </view>
        <view class="comment-none" wx:if="{{oCommentData.list <= 0}}">暂无评论，欢迎抢沙发</view>
        <view class="comment-textarea">
            <form class="f-jc-ac" bindsubmit="bindFormSubmit">
                 <textarea class="textarea"
                           auto-height="true"
                           auto-focus="{{textarea_auto_focus}}"
                           fixed="true"
                           value="{{sCommentValue}}"
                           show-confirm-bar=''
                           placeholder="写评论"
                           name="textarea"/>
                <button style="padding:0; margin: 0;border: none" class="btn-submit" form-type="submit">发送</button>
            </form>
        </view>
        <wxc-dialog
                id='dialog'
                class="wcx-dialog"
                content="回复评论"
                confirm-text="回复"
                bindconfirm="clickReplyComment">
        </wxc-dialog>
        <wxc-toast
                is-show="{{toastMsg.show}}"
                text="{{toastMsg.text}}"
                icon="{{toastMsg.icon_str}}"
                icon-image="{{toastMsg.icon_image}}">
        </wxc-toast>
    </view>
</template>

<script>
    const storage = require('../../libs/storage')
    const api = require('../../api/index.js')
    const app = getApp()
    let scrollOldTo = 0
    export default {
        config: {
            navigationBarTitleText: '动态',
            onReachBottomDistance: 60,
            usingComponents: {
                "list-item": '../../common/layout/list-item',
                "comment-item": '../../common/layout/comment-item',
                "wxc-loadmore": '@minui/wxc-loadmore',
                "wxc-toast": '@minui/wxc-toast',
                "app-toast": '../../common/layout/app-toast',
                "wxc-dialog": '@minui/wxc-dialog'
            }
        },
        data: {
            itemId: '',
            itemData: {},
            showPageFlag: false,
            textarea_auto_focus: false,
            loadmoreFlag: false,
            loadmoreIsEndFlag: false,
            sCommentValue: '',
            oCommentData: {
                list: [],
                pageNum: 0,   //????
                pageSize: 10   //????
            },
            toastMsg: {
                show: false,
                text: '正在上传 ~~',
                iconShow: true,
                icon_image: '',
                duration: '',
                icon_str: '',  // 'yes', ''
            },
            oReplyTo: {},
            icon_image: 'http://oyn5he3v2.bkt.clouddn.com//yqy/icon/222112/icon_loading.gif'
        },
        onLoad: function (option) {
            wx.showShareMenu({
                withShareTicket: true
            })
            this.setData({
                itemId: option.itemId
            })
            this.getData()
            this.getCommentData()
        },
        onShow: function () {
        },
        /**
         * 获取 Dynamic
         **/
        getData() {
            this.setData({toastMsg: {
                text: '网络出错啦 ~',
                duration: 2000
            }})
            wx.showLoading({title: "加载..."})
            const id = this.data.itemId
            api.getDetailDynamic({id}).then(res => {
                if (res.success) {
                    this.setData({itemData: res.data})
                    this.setData({showPageFlag: true})
                } else {
                    this.setData({toastMsg: {
                        text: res.msg || '网络出错啦 ~',
                        duration: 2000
                    }})
                }
            }).catch(err => {
                this.setData({toastMsg: {
                    text: '网络出错啦 ~',
                    duration: 2000
                }})
            }).then(() => {
                wx.hideLoading()
            })
        },
        /**
         * 获取评论
         **/
        getCommentData(flag) {
            const itemId = this.data.itemId
            let {pageNum, pageSize} = this.data.oCommentData
            if (flag === 'moreFlag') {
                pageNum += 1
            }
            api.getConditionComment({
                dynamicId: itemId,
                pageNum: pageNum,
                pageSize: pageSize
            }).then(res => {
                if (res.success) {
                    let listData = [...this.data.oCommentData.list, ...res.data.list]
                    this.setData({
                        oCommentData:{
                            list: listData,
                            pageNum: res.data.pageNum,
                            pageSize: res.data.pageSize,
                            totalPageNum: res.data.totalPageNum
                        }
                    })
                } else {
                    this.toastMsg({
                        text: res.msg || '网络出错啦 ~',
                        duration: 2000
                    })
                }
            }).catch(err => {
                this.toastMsg({
                    text: '网络出错啦 ~',
                    duration: 2000
                })
            }).then(() => {
                this.setData({loadmoreFlag: false})
            })
        },
        /**
         * 上啦加载更多
         **/
        onReachBottom() {
            const loadmoreFlag = this.data.loadmoreFlag
            if (loadmoreFlag) {
                return
            }
            const {pageNum, totalPageNum} = this.data.oCommentData
            if (pageNum >= (totalPageNum - 1)) {
                this.setData({loadmoreIsEndFlag: true})
                return
            }
            this.setData({loadmoreFlag: true})
            this.getCommentData('moreFlag')
        },
        /**
         * 发表评论
         * @param e
         */
        bindFormSubmit: function (e) {
            const commentStr = e.detail.value.textarea
            if (!commentStr) {
                this.toastMsg({
                    text: '评论不能为空 ~~',
                    duration: 2000
                })
                return
            }
            const dynamicId = this.data.itemId
            const replyToNickName = commentStr.substring(1,commentStr.indexOf(':'))
            let comment = commentStr.substring(commentStr.indexOf(':'), commentStr.length)
            let replyTo = {}
            if (replyToNickName && replyToNickName === this.data.oReplyTo.nickName) {
                replyTo.nickName = replyToNickName
                replyTo.comment = this.data.oReplyTo.comment
                comment = commentStr.substring(commentStr.indexOf(':')+1, commentStr.length)
            }
            api.sumitCommont({
                dynamicId,
                comment,
                replyTo
            }).then(r => {
                if (r.success) {
                    this.toastMsg({
                        text: '评论成功 ~~',
                        duration: 2000
                    })
                    // 更新评论列表数据
                    r.data.time = '刚刚'
                    let {list, pageNum, totalPageNum} = this.data.oCommentData
                    list.unshift(r.data)
                    this.setData({oCommentData: {
                        list,
                        pageNum,
                        totalPageNum
                    }})
                    this.setData({sCommentValue: ''})
                } else {
                    this.toastMsg({
                        text: res.msg || '网络出错啦 ~',
                        duration: 2000
                    })
                }
            }).catch(err => {
                this.toastMsg({
                    text: '网络出错啦 ~',
                    duration: 2000
                })
            })
        },
        clickCommentItem(event) {
            const commentdata = event.currentTarget.dataset.commentdata
            this.setData({
                oReplyTo: {
                    nickName: commentdata.nickName,
                    comment: commentdata.comment
                }
            })
            this.showDialog()
        },
        /**
         * 回复评论
         * @param event
         */
        clickReplyComment(event) {
            const nickName = this.data.oReplyTo.nickName
            this.setData({textarea_auto_focus: true})
            this.setData({sCommentValue: `@${nickName}:`})
            this.hideDialog()
        },
        showDialog() {
            const dialogComponent = this.selectComponent('.wcx-dialog')
            dialogComponent && dialogComponent.show()
        },
        hideDialog() {
            const dialogComponent = this.selectComponent('.wcx-dialog')
            dialogComponent && dialogComponent.hide()
        },
        toastMsg(obj) {
            const {text = '', icon_image = '', icon_str = '', duration} = obj
            this.setData({
                toastMsg: {
                    show: true,
                    text: text,
                    icon_image: icon_image,
                    icon_str: icon_str
                }
            })
            if (duration) {
                setTimeout(() => {
                    this.setData({
                        toastMsg: {
                            show: false
                        }
                    })
                }, duration)
            }
        }
    }
</script>
