<template>
    <page></page>
</template>

<script>
    const QQMapWX = require('./libs/qqmap-sdk')
    const storage = require('./libs/storage')
    export default {
        config: {
            usingComponents: {
                'layout-head': 'layout/head',
                'layout-foot': 'layout/foot'
            },
            pages: [],
            window: {
                backgroundTextStyle: 'dark',
                backgroundColor: '#efefef',
                navigationBarBackgroundColor: '#FEC4AA',
                navigationBarTitleText: '方圆两公里',
                navigationBarTextStyle: '#FFFFFF'
            },
            tabBar: {
                color: '#8a8a8a',
                selectedColor: '#d81e06',
                borderStyle: 'black',
                backgroundColor: '#ffffff',
                list: [
                    {
                        pagePath: 'pages/home/index',
                        iconPath: 'common/assets/tab/home_nor.png',
                        selectedIconPath: 'common/assets/tab/home_act.png',
                        text: '主页'
                    },
                    {
                        pagePath: 'pages/about/index',
                        iconPath: 'common/assets/tab/me_nor.png',
                        selectedIconPath: 'common/assets/tab/me_act.png',
                        text: '我'
                    }
                ]
            },
            networkTimeout: {
                request: 10000
            }
        },
        globalData: {
            name: 'zss'
        },
        onLaunch: function () {
            this.qQMapWX = new QQMapWX({
                key: 'OY5BZ-3I5WS-BN5OF-6F4RA-NYQRJ-TKFAA' // ??
            })
        },
        onShow: function () {

        },
        onHide: function () {
        },
        getQQMapWX() {
            return this.qQMapWX
        },
        setLocation(fn) {
            wx.getLocation({
                type: 'wgs84',
                success: function (res) {
                    console.log(res)
                    storage.set('location', res)
                    if (fn) {fn()}
                }
            })
        },
        getLocation(fn) {
            const location = storage.get('location')
            if (location) {
                if (fn) {fn()}
                return location
            } else {
                wx.getLocation({
                    type: 'wgs84',
                    success: function (res) {
                        console.log(res)
                        storage.set('location', res)
                        if (fn) {fn()}
                    },
                    fail: function () {
                        storage.set('location', {
                            horizontalAccuracy: 65,
                            latitude: 30.245141,
                            longitude: 120.148497,
                            speed: -1,
                            verticalAccuracy: 65
                        })
                        if (fn) {fn('已为您切换到杭州市')}
                    }
                })
            }
        },
        getTokenInfo() {
            const _this = this
            return new Promise((resolve, reject) => {
                const userInfo = storage.get('userInfo')
                if (userInfo) {
                    resolve(userInfo)
                } else {
                    _this.getLogin(resolve, reject)
                }
            })
        },
        getLogin(resolve, reject, fn) {
            const _this = this
            wx.login({
                success: function (res) {
                    _this.getInfo(resolve, reject, res.code)
                },
                fail: function (err) {
                    console.log('login err: ', err)
                    reject(err)
                }
            })
        },
        getInfo(resolve, reject, code) {
            wx.getUserInfo({
                success: function (res) {
                    let userInfo = res.userInfo
                    const nickName = userInfo.nickName
                    const avatarUrl = userInfo.avatarUrl
                    const gender = userInfo.gender //性别
                    const province = userInfo.province
                    const city = userInfo.city
                    const country = userInfo.country
                    wx.request({
                        url: 'https://yqy.mynatapp.cc/v2/login',
                        method: 'POST',
                        data: {
                            code,
                            nickName,
                            avatarUrl,
                            province,
                            gender,
                            city,
                            country
                        },
                        success: function (res) {
                            storage.set('XCX-Admin', res.data.data.token)
                            storage.set('userInfo', userInfo)
                            resolve(userInfo)
                        },
                        fail: function (err) {
                            console.log('getInfo request err: ', err)
                            reject(err)
                        }
                    })
                },
                fail: function (err) {
                    console.log('getInfo err: ', err)
                    reject(err)
                }
            })
        },
        /**
         * 重新授权弹窗
         * @param _this
         * @param fn
         */
        dialogImpowerClick(_this, fn) {
            const that = this
            //打开授权
            wx.openSetting({
                success: (res) => {
                    if (res.authSetting["scope.userInfo"]) {
                        that.hideDialog(_this)
                        fn()
                    }
                    else {
                        that.hideDialog(_this)
                    }
                },
                fail: function () {
                    _this.hideDialog(_this)
                }
            })
        },
        showDialog(_this) {
            const dialogComponent = _this.selectComponent('.wcx-dialog')
            dialogComponent && dialogComponent.show()
        },
        hideDialog(_this) {
            const dialogComponent = _this.selectComponent('.wcx-dialog')
            dialogComponent && dialogComponent.hide()
        }
    }
</script>

<style>
    @import './common/assets/style/reset.wxss';
    @import './common/assets/style/icon.pcss';
    @import './common/assets/style/transform.wxss';
</style>
